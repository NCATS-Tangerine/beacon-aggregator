/*
 * Translator Knowledge Beacon API
 * This is the Translator Knowledge Beacon web service application programming interface (API). 
 *
 * OpenAPI spec version: 1.0.16
 * Contact: richard@starinformatics.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package bio.knowledge.client.api;

import java.util.List;

import org.junit.Ignore;
import org.junit.Test;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import bio.knowledge.client.ApiException;
import bio.knowledge.client.model.BeaconConceptType;
import bio.knowledge.client.model.BeaconKnowledgeMapStatement;
import bio.knowledge.client.model.BeaconPredicate;

/**
 * API tests for MetadataApi
 */
@Ignore
public class MetadataApiTest {
	
	private static Logger _logger = LoggerFactory.getLogger(MetadataApiTest.class);
	
    private final MetadataApi api = new MetadataApi();

    
    /**
     * 
     *
     * Get a list of types and # of instances in the knowledge source, and a link to the API call for the list of equivalent terminology 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getConceptTypesTest() throws ApiException {
    	
    		_logger.debug("getConceptTypesTest:");
    	
        List<BeaconConceptType> response = api.getConceptTypes();

        assert(response.size() > 0);

        for(BeaconConceptType type : response) {
        		_logger.debug(type.toString());
        }
    }
    
    /**
     * 
     *
     * Get a high level knowledge map of the all the beacons by subject semantic type, predicate and semantic object type 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getKnowledgeMapTest() throws ApiException {
    	
    		_logger.debug("getKnowledgeMapTest:");
    	
    		List<BeaconKnowledgeMapStatement> response = null;
    		
    		try {
    			response = api.getKnowledgeMap();
    		} catch(ApiException ae) {
    			_logger.debug("getKnowledgeMap() - ApiException: "+ae.getMessage());
    		}
        
    		if(response==null) { 
    			
    		} else {
	        assert(response.size()>0);
	        for(BeaconKnowledgeMapStatement map : response) {
	        		_logger.debug(map.toString());
	        }
        }
    }
    
    /**
     * 
     *
     * Get a list of predicates used in statements issued by the knowledge source 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getPredicatesTest() throws ApiException {
    	
		_logger.debug("getPredicatesTest:");
	
        List<BeaconPredicate> response = api.getPredicates();
        
        assert(response.size()>0);

        for(BeaconPredicate predicate : response) {
        		_logger.debug(predicate.toString());
        }
    }
    
}
